version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    ports:
      - "8080:8080"  # Внутренний порт фронтенда
    volumes:
      - ./frontend:/app
      - /app/node_modules

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=velo
      - DB_PASSWORD=velopassword
      - DB_NAME=velo
      - JWT_SECRET=velo_super_secret_key
      - PORT=3000
    ports:
      - "3000:3000"  # Внутренний порт бэкенда
    volumes:
      - ./backend:/app
      - /app/node_modules

  db:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "3306:3306"  # Внутренний порт MySQL
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=velo
      - MYSQL_USER=velo
      - MYSQL_PASSWORD=velopassword
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"      # Внешний HTTP
      - "443:443"    # Внешний HTTPS
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/ssl:/etc/caddy/ssl
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend

volumes:
  mysql_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

volumes:
  mysql_data:
  caddy_data:
  caddy_config:
