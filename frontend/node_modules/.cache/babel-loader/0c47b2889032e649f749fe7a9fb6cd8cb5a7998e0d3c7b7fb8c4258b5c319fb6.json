{"ast":null,"code":"import { ref, computed, watch, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useToast } from 'vue-toastification';\nexport default {\n  name: 'AccountView',\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const toast = useToast();\n\n    // State\n    const activeTab = ref('profile');\n    const passwordForm = ref({\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n    const passwordError = ref('');\n    const passwordUpdating = ref(false);\n    const tabs = [{\n      id: 'profile',\n      title: 'Профиль'\n    }, {\n      id: 'orders',\n      title: 'История заказов'\n    }];\n\n    // Computed properties\n    const isAuthenticated = computed(() => store.getters['auth/isAuthenticated']);\n    const user = computed(() => store.getters['auth/currentUser'] || {});\n    const orders = computed(() => store.getters['orders/allOrders'] || []);\n    const loading = computed(() => store.getters.isLoading);\n    const isAdmin = computed(() => store.getters['auth/isAdmin']);\n    const isPasswordFormValid = computed(() => {\n      return passwordForm.value.currentPassword.trim() !== '' && passwordForm.value.newPassword.trim() !== '' && passwordForm.value.newPassword === passwordForm.value.confirmPassword && passwordForm.value.newPassword.length >= 6;\n    });\n\n    // Watch for route query to set active tab\n    onMounted(() => {\n      if (route.query.tab && tabs.some(tab => tab.id === route.query.tab)) {\n        activeTab.value = route.query.tab;\n      }\n\n      // Fetch orders if on orders tab\n      if (activeTab.value === 'orders') {\n        store.dispatch('orders/fetchOrders');\n      }\n    });\n\n    // Watch for active tab changes to update route query\n    watch(activeTab, newTab => {\n      router.push({\n        query: {\n          ...route.query,\n          tab: newTab\n        }\n      });\n\n      // Fetch orders if moving to orders tab\n      if (newTab === 'orders') {\n        store.dispatch('orders/fetchOrders');\n      }\n    });\n\n    // Watch password form changes\n    watch(() => passwordForm.value.confirmPassword, newValue => {\n      if (newValue && passwordForm.value.newPassword !== newValue) {\n        passwordError.value = 'Пароли не совпадают';\n      } else {\n        passwordError.value = '';\n      }\n    });\n\n    // Methods\n    const updatePassword = async () => {\n      if (!isPasswordFormValid.value) return;\n      passwordUpdating.value = true;\n      try {\n        const result = await store.dispatch('auth/updatePassword', {\n          currentPassword: passwordForm.value.currentPassword,\n          newPassword: passwordForm.value.newPassword\n        });\n        if (result.success) {\n          passwordForm.value = {\n            currentPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          };\n        }\n      } finally {\n        passwordUpdating.value = false;\n      }\n    };\n    const logout = () => {\n      store.dispatch('auth/logout');\n    };\n    const formatDate = dateString => {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('ru-RU', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n    const formatPrice = price => {\n      return new Intl.NumberFormat('ru-RU').format(price);\n    };\n    const getOrderTotal = order => {\n      return order.items.reduce((total, item) => {\n        return total + item.price_at_time * item.quantity;\n      }, 0);\n    };\n\n    // Функция для обновления данных пользователя\n    const refreshUserData = async () => {\n      try {\n        store.commit('setLoading', true, {\n          root: true\n        });\n        // Получаем актуальные данные пользователя с сервера\n        const result = await store.dispatch('auth/checkAuth');\n        if (result && result.success) {\n          toast.success('Данные пользователя успешно обновлены');\n\n          // Проверяем, есть ли у пользователя права администратора\n          if (isAdmin.value) {\n            toast.info('У вас есть права администратора! Вы можете перейти в админ-панель.');\n          }\n        } else {\n          toast.error('Не удалось обновить данные пользователя');\n        }\n      } catch (error) {\n        console.error('Ошибка при обновлении данных:', error);\n        toast.error('Произошла ошибка при обновлении данных');\n      } finally {\n        store.commit('setLoading', false, {\n          root: true\n        });\n      }\n    };\n\n    // Функция для перехода в админ-панель\n    const goToAdmin = () => {\n      router.push('/admin');\n    };\n    return {\n      activeTab,\n      tabs,\n      passwordForm,\n      passwordError,\n      passwordUpdating,\n      isPasswordFormValid,\n      isAuthenticated,\n      user,\n      orders,\n      loading,\n      isAdmin,\n      updatePassword,\n      logout,\n      formatDate,\n      formatPrice,\n      getOrderTotal,\n      refreshUserData,\n      goToAdmin\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","useStore","useRoute","useRouter","useToast","name","setup","store","route","router","toast","activeTab","passwordForm","currentPassword","newPassword","confirmPassword","passwordError","passwordUpdating","tabs","id","title","isAuthenticated","getters","user","orders","loading","isLoading","isAdmin","isPasswordFormValid","value","trim","length","query","tab","some","dispatch","newTab","push","newValue","updatePassword","result","success","logout","formatDate","dateString","date","Date","Intl","DateTimeFormat","day","month","year","hour","minute","format","formatPrice","price","NumberFormat","getOrderTotal","order","items","reduce","total","item","price_at_time","quantity","refreshUserData","commit","root","info","error","console","goToAdmin"],"sources":["C:\\Users\\geeksaider\\VeloW\\frontend\\src\\views\\AccountView.vue"],"sourcesContent":["<template>\n  <div class=\"velo-container py-12 md:py-16\">\n    <h1 class=\"text-3xl font-light text-[color:var(--color-dark)] mb-10\">Личный кабинет</h1>\n    \n    <div v-if=\"loading\" class=\"flex justify-center py-12\">\n      <div class=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-[color:var(--color-accent)]\"></div>\n    </div>\n    \n    <div v-else-if=\"!isAuthenticated\" class=\"text-center py-16 border border-[color:var(--color-secondary)]\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16 mx-auto text-[color:var(--color-light-text)] mb-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n      </svg>\n      <h2 class=\"text-2xl font-light text-[color:var(--color-dark)] mb-4\">Требуется авторизация</h2>\n      <p class=\"text-[color:var(--color-light-text)] mb-8\">Для доступа к личному кабинету необходимо войти в систему</p>\n      <router-link to=\"/login?redirect=/account\" class=\"velo-btn velo-btn-primary\">\n        Войти в аккаунт\n      </router-link>\n    </div>\n    \n    <div v-else class=\"grid grid-cols-1 md:grid-cols-12 gap-10\">\n      <!-- Sidebar -->\n      <div class=\"md:col-span-3\">\n        <div class=\"border border-[color:var(--color-secondary)]\">\n          <div class=\"p-6 border-b border-[color:var(--color-secondary)]\">\n            <h2 class=\"font-light text-[color:var(--color-dark)] break-all\">{{ user.email }}</h2>\n            <p class=\"text-sm text-[color:var(--color-light-text)] mt-1\">Дата регистрации: {{ formatDate(user.created_at) }}</p>\n          </div>\n          \n          <nav class=\"p-4\">\n            <button \n              v-for=\"tab in tabs\" \n              :key=\"tab.id\"\n              @click=\"activeTab = tab.id\"\n              :class=\"[\n                'w-full text-left px-4 py-3 transition-colors mb-2',\n                activeTab === tab.id \n                  ? 'bg-[color:var(--color-secondary-light)] text-[color:var(--color-dark)]' \n                  : 'text-[color:var(--color-light-text)] hover:text-[color:var(--color-accent)]'\n              ]\"\n            >\n              {{ tab.title }}\n            </button>\n            \n            <button \n              @click=\"logout\"\n              class=\"w-full text-left px-4 py-3 transition-colors text-[color:var(--color-light-text)] hover:text-[color:var(--color-accent)]\"\n            >\n              Выйти\n            </button>\n          </nav>\n        </div>\n      </div>\n      \n      <!-- Main Content -->\n      <div class=\"md:col-span-9\">\n        <!-- Profile Tab -->\n        <div v-if=\"activeTab === 'profile'\" class=\"border border-[color:var(--color-secondary)] p-8\">\n          <h2 class=\"text-2xl font-light text-[color:var(--color-dark)] mb-8\">Ваш профиль</h2>\n          \n          <div class=\"mb-10\">\n            <h3 class=\"text-lg font-light text-[color:var(--color-dark)] mb-4\">Информация</h3>\n            <p class=\"mb-2\"><span class=\"text-[color:var(--color-light-text)]\">Email:</span> <span class=\"break-all\">{{ user.email }}</span></p>\n            <p><span class=\"text-[color:var(--color-light-text)]\">Аккаунт создан:</span> {{ formatDate(user.created_at) }}</p>\n          </div>\n          \n          <div>\n            <h3 class=\"text-lg font-light text-[color:var(--color-dark)] mb-6\">Изменить пароль</h3>\n            <form @submit.prevent=\"updatePassword\" class=\"space-y-6\">\n              <div>\n                <label for=\"currentPassword\" class=\"velo-label\">Текущий пароль</label>\n                <input \n                  id=\"currentPassword\" \n                  type=\"password\" \n                  v-model=\"passwordForm.currentPassword\" \n                  class=\"velo-input w-full\" \n                  required\n                >\n              </div>\n              \n              <div>\n                <label for=\"newPassword\" class=\"velo-label\">Новый пароль</label>\n                <input \n                  id=\"newPassword\" \n                  type=\"password\" \n                  v-model=\"passwordForm.newPassword\" \n                  class=\"velo-input w-full\" \n                  required\n                  minlength=\"6\"\n                >\n                <p class=\"text-xs text-[color:var(--color-light-text)] mt-2\">Минимум 6 символов</p>\n              </div>\n              \n              <div>\n                <label for=\"confirmPassword\" class=\"velo-label\">Подтверждение пароля</label>\n                <input \n                  id=\"confirmPassword\" \n                  type=\"password\" \n                  v-model=\"passwordForm.confirmPassword\" \n                  class=\"velo-input w-full\" \n                  required\n                  minlength=\"6\"\n                >\n                <p v-if=\"passwordError\" class=\"text-xs text-red-500 mt-2\">\n                  {{ passwordError }}\n                </p>\n              </div>\n              \n              <div class=\"pt-4\">\n                <button \n                  type=\"submit\" \n                  class=\"velo-btn velo-btn-primary\"\n                  :disabled=\"passwordUpdating || !isPasswordFormValid\"\n                >\n                  <span v-if=\"passwordUpdating\" class=\"flex items-center justify-center\">\n                    <svg class=\"animate-spin mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"2\"></circle>\n                      <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Обновление...\n                  </span>\n                  <span v-else>Обновить пароль</span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        \n        <!-- Orders Tab -->\n        <div v-if=\"activeTab === 'orders'\" class=\"border border-[color:var(--color-secondary)]\">\n          <div class=\"p-8 border-b border-[color:var(--color-secondary)]\">\n            <h2 class=\"text-2xl font-light text-[color:var(--color-dark)]\">История заказов</h2>\n          </div>\n          \n          <div v-if=\"orders.length === 0\" class=\"py-10 text-center\">\n            <p class=\"text-[color:var(--color-light-text)] mb-6\">У вас пока нет заказов</p>\n            <router-link to=\"/shop\" class=\"velo-btn velo-btn-primary inline-block\">\n              Перейти в каталог\n            </router-link>\n          </div>\n          <div v-else class=\"divide-y divide-[color:var(--color-secondary)]\">\n            <div \n              v-for=\"order in orders\" \n              :key=\"order.id\" \n              class=\"p-8 hover:bg-[color:var(--color-primary)] transition-colors\"\n            >\n              <div class=\"flex flex-wrap justify-between items-start mb-6\">\n                <div>\n                  <h3 class=\"font-light text-[color:var(--color-dark)]\">\n                    Заказ #{{ order.id }}\n                  </h3>\n                  <p class=\"text-sm text-[color:var(--color-light-text)] mt-1\">\n                    {{ formatDate(order.created_at) }}\n                  </p>\n                </div>\n                <div class=\"text-[color:var(--color-accent)]\">\n                  {{ formatPrice(getOrderTotal(order)) }} ₽\n                </div>\n              </div>\n              \n              <div class=\"space-y-5\">\n                <div \n                  v-for=\"item in order.items\" \n                  :key=\"item.id\" \n                  class=\"flex items-center\"\n                >\n                  <div class=\"w-16 h-16 overflow-hidden flex-shrink-0\">\n                    <img \n                      :src=\"item.image_url || 'https://via.placeholder.com/64x64?text=Velo'\" \n                      :alt=\"item.title\" \n                      class=\"w-full h-full object-cover\"\n                    >\n                  </div>\n                  <div class=\"ml-4 flex-grow\">\n                    <div class=\"text-[color:var(--color-dark)]\">{{ item.title }}</div>\n                    <div class=\"text-sm text-[color:var(--color-light-text)] mt-1\">{{ item.quantity }} x {{ formatPrice(item.price_at_time) }} ₽</div>\n                  </div>\n                  <div class=\"text-sm text-[color:var(--color-accent)]\">\n                    {{ formatPrice(item.price_at_time * item.quantity) }} ₽\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n        </div>\n    \n    <!-- Добавляем кнопку для обновления данных пользователя -->\n    <div class=\"mt-8 p-4 border border-[color:var(--color-secondary)] rounded\">\n      <h3 class=\"text-lg font-medium mb-4\">Дополнительные действия</h3>\n      <div class=\"flex space-x-4\">\n        <button @click=\"refreshUserData\" class=\"velo-btn velo-btn-primary\">Обновить данные пользователя</button>\n        <button v-if=\"isAdmin\" @click=\"goToAdmin\" class=\"velo-btn velo-btn-primary\">Перейти в админ-панель</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useToast } from 'vue-toastification';\n\nexport default {\n  name: 'AccountView',\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const toast = useToast();\n    \n    // State\n    const activeTab = ref('profile');\n    const passwordForm = ref({\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n    const passwordError = ref('');\n    const passwordUpdating = ref(false);\n    \n    const tabs = [\n      { id: 'profile', title: 'Профиль' },\n      { id: 'orders', title: 'История заказов' }\n    ];\n    \n    // Computed properties\n    const isAuthenticated = computed(() => store.getters['auth/isAuthenticated']);\n    const user = computed(() => store.getters['auth/currentUser'] || {});\n    const orders = computed(() => store.getters['orders/allOrders'] || []);\n    const loading = computed(() => store.getters.isLoading);\n    const isAdmin = computed(() => store.getters['auth/isAdmin']);\n    \n    const isPasswordFormValid = computed(() => {\n      return (\n        passwordForm.value.currentPassword.trim() !== '' &&\n        passwordForm.value.newPassword.trim() !== '' &&\n        passwordForm.value.newPassword === passwordForm.value.confirmPassword &&\n        passwordForm.value.newPassword.length >= 6\n      );\n    });\n    \n    // Watch for route query to set active tab\n    onMounted(() => {\n      if (route.query.tab && tabs.some(tab => tab.id === route.query.tab)) {\n        activeTab.value = route.query.tab;\n      }\n      \n      // Fetch orders if on orders tab\n      if (activeTab.value === 'orders') {\n        store.dispatch('orders/fetchOrders');\n      }\n    });\n    \n    // Watch for active tab changes to update route query\n    watch(activeTab, (newTab) => {\n      router.push({ query: { ...route.query, tab: newTab } });\n      \n      // Fetch orders if moving to orders tab\n      if (newTab === 'orders') {\n        store.dispatch('orders/fetchOrders');\n      }\n    });\n    \n    // Watch password form changes\n    watch(() => passwordForm.value.confirmPassword, (newValue) => {\n      if (newValue && passwordForm.value.newPassword !== newValue) {\n        passwordError.value = 'Пароли не совпадают';\n      } else {\n        passwordError.value = '';\n      }\n    });\n    \n    // Methods\n    const updatePassword = async () => {\n      if (!isPasswordFormValid.value) return;\n      \n      passwordUpdating.value = true;\n      \n      try {\n        const result = await store.dispatch('auth/updatePassword', {\n          currentPassword: passwordForm.value.currentPassword,\n          newPassword: passwordForm.value.newPassword\n        });\n        \n        if (result.success) {\n          passwordForm.value = {\n            currentPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          };\n        }\n      } finally {\n        passwordUpdating.value = false;\n      }\n    };\n    \n    const logout = () => {\n      store.dispatch('auth/logout');\n    };\n    \n    const formatDate = (dateString) => {\n      if (!dateString) return '';\n      \n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('ru-RU', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n    \n    const formatPrice = (price) => {\n      return new Intl.NumberFormat('ru-RU').format(price);\n    };\n    \n    const getOrderTotal = (order) => {\n      return order.items.reduce((total, item) => {\n        return total + (item.price_at_time * item.quantity);\n      }, 0);\n    };\n    \n    // Функция для обновления данных пользователя\n    const refreshUserData = async () => {\n      try {\n        store.commit('setLoading', true, { root: true });\n        // Получаем актуальные данные пользователя с сервера\n        const result = await store.dispatch('auth/checkAuth');\n        \n        if (result && result.success) {\n          toast.success('Данные пользователя успешно обновлены');\n          \n          // Проверяем, есть ли у пользователя права администратора\n          if (isAdmin.value) {\n            toast.info('У вас есть права администратора! Вы можете перейти в админ-панель.');\n          }\n        } else {\n          toast.error('Не удалось обновить данные пользователя');\n        }\n      } catch (error) {\n        console.error('Ошибка при обновлении данных:', error);\n        toast.error('Произошла ошибка при обновлении данных');\n      } finally {\n        store.commit('setLoading', false, { root: true });\n      }\n    };\n    \n    // Функция для перехода в админ-панель\n    const goToAdmin = () => {\n      router.push('/admin');\n    };\n    \n    return {\n      activeTab,\n      tabs,\n      passwordForm,\n      passwordError,\n      passwordUpdating,\n      isPasswordFormValid,\n      isAuthenticated,\n      user,\n      orders,\n      loading,\n      isAdmin,\n      updatePassword,\n      logout,\n      formatDate,\n      formatPrice,\n      getOrderTotal,\n      refreshUserData,\n      goToAdmin\n    };\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}