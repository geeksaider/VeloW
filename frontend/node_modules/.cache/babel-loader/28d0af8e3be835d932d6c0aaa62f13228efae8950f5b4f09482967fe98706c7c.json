{"ast":null,"code":"import { ref, computed, watch, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useToast } from 'vue-toastification';\nexport default {\n  name: 'AccountView',\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const toast = useToast();\n\n    // State\n    const activeTab = ref('profile');\n    const passwordForm = ref({\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n    const passwordError = ref('');\n    const passwordUpdating = ref(false);\n    const tabs = [{\n      id: 'profile',\n      title: 'Профиль'\n    }, {\n      id: 'orders',\n      title: 'История заказов'\n    }];\n\n    // Computed properties\n    const isAuthenticated = computed(() => store.getters['auth/isAuthenticated']);\n    const user = computed(() => store.getters['auth/currentUser'] || {});\n    const orders = computed(() => store.getters['orders/allOrders'] || []);\n    const loading = computed(() => store.getters.isLoading);\n    const isPasswordFormValid = computed(() => {\n      return passwordForm.value.currentPassword.trim() !== '' && passwordForm.value.newPassword.trim() !== '' && passwordForm.value.newPassword === passwordForm.value.confirmPassword && passwordForm.value.newPassword.length >= 6;\n    });\n\n    // Watch for route query to set active tab\n    onMounted(() => {\n      if (route.query.tab && tabs.some(tab => tab.id === route.query.tab)) {\n        activeTab.value = route.query.tab;\n      }\n\n      // Fetch orders if on orders tab\n      if (activeTab.value === 'orders') {\n        store.dispatch('orders/fetchOrders');\n      }\n    });\n\n    // Watch for active tab changes to update route query\n    watch(activeTab, newTab => {\n      router.push({\n        query: {\n          ...route.query,\n          tab: newTab\n        }\n      });\n\n      // Fetch orders if moving to orders tab\n      if (newTab === 'orders') {\n        store.dispatch('orders/fetchOrders');\n      }\n    });\n\n    // Watch password form changes\n    watch(() => passwordForm.value.confirmPassword, newValue => {\n      if (newValue && passwordForm.value.newPassword !== newValue) {\n        passwordError.value = 'Пароли не совпадают';\n      } else {\n        passwordError.value = '';\n      }\n    });\n\n    // Methods\n    const updatePassword = async () => {\n      if (!isPasswordFormValid.value) return;\n      passwordUpdating.value = true;\n      try {\n        const result = await store.dispatch('auth/updatePassword', {\n          currentPassword: passwordForm.value.currentPassword,\n          newPassword: passwordForm.value.newPassword\n        });\n        if (result.success) {\n          passwordForm.value = {\n            currentPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          };\n        }\n      } finally {\n        passwordUpdating.value = false;\n      }\n    };\n    const logout = () => {\n      store.dispatch('auth/logout');\n    };\n    const formatDate = dateString => {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('ru-RU', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n    const formatPrice = price => {\n      return new Intl.NumberFormat('ru-RU').format(price);\n    };\n    const getOrderTotal = order => {\n      return order.items.reduce((total, item) => {\n        return total + item.price_at_time * item.quantity;\n      }, 0);\n    };\n    return {\n      activeTab,\n      tabs,\n      passwordForm,\n      passwordError,\n      passwordUpdating,\n      isPasswordFormValid,\n      isAuthenticated,\n      user,\n      orders,\n      loading,\n      updatePassword,\n      logout,\n      formatDate,\n      formatPrice,\n      getOrderTotal\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","useStore","useRoute","useRouter","useToast","name","setup","store","route","router","toast","activeTab","passwordForm","currentPassword","newPassword","confirmPassword","passwordError","passwordUpdating","tabs","id","title","isAuthenticated","getters","user","orders","loading","isLoading","isPasswordFormValid","value","trim","length","query","tab","some","dispatch","newTab","push","newValue","updatePassword","result","success","logout","formatDate","dateString","date","Date","Intl","DateTimeFormat","day","month","year","hour","minute","format","formatPrice","price","NumberFormat","getOrderTotal","order","items","reduce","total","item","price_at_time","quantity"],"sources":["C:\\Users\\geeksaider\\VeloW\\frontend\\src\\views\\AccountView.vue"],"sourcesContent":["<template>\n  <div class=\"container mx-auto px-4 py-8\">\n    <h1 class=\"text-3xl font-bold mb-8\">Личный кабинет</h1>\n    \n    <div v-if=\"loading\" class=\"flex justify-center py-12\">\n      <div class=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-slate-600\"></div>\n    </div>\n    \n    <div v-else-if=\"!isAuthenticated\" class=\"text-center py-12 bg-white rounded-lg shadow-md\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16 mx-auto text-slate-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n      </svg>\n      <h2 class=\"text-2xl font-semibold text-slate-800 mb-4\">Требуется авторизация</h2>\n      <p class=\"text-slate-600 mb-6\">Для доступа к личному кабинету необходимо войти в систему</p>\n      <router-link to=\"/login?redirect=/account\" class=\"btn btn-primary\">\n        Войти в аккаунт\n      </router-link>\n    </div>\n    \n    <div v-else class=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n      <!-- Sidebar -->\n      <div class=\"md:col-span-1\">\n        <div class=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div class=\"p-6 border-b border-slate-200\">\n            <h2 class=\"font-semibold text-slate-800\">{{ user.email }}</h2>\n            <p class=\"text-sm text-slate-500\">Дата регистрации: {{ formatDate(user.created_at) }}</p>\n          </div>\n          \n          <nav class=\"p-2\">\n            <button \n              v-for=\"tab in tabs\" \n              :key=\"tab.id\"\n              @click=\"activeTab = tab.id\"\n              :class=\"[\n                'w-full text-left px-4 py-2 rounded-md transition-colors mb-1',\n                activeTab === tab.id \n                  ? 'bg-slate-100 text-slate-800 font-medium' \n                  : 'text-slate-600 hover:bg-slate-50 hover:text-slate-800'\n              ]\"\n            >\n              {{ tab.title }}\n            </button>\n            \n            <button \n              @click=\"logout\"\n              class=\"w-full text-left px-4 py-2 rounded-md transition-colors text-slate-600 hover:bg-slate-50 hover:text-slate-800\"\n            >\n              Выйти\n            </button>\n          </nav>\n        </div>\n      </div>\n      \n      <!-- Main Content -->\n      <div class=\"md:col-span-3\">\n        <!-- Profile Tab -->\n        <div v-if=\"activeTab === 'profile'\" class=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 class=\"text-xl font-semibold text-slate-800 mb-6\">Ваш профиль</h2>\n          \n          <div class=\"mb-6\">\n            <h3 class=\"text-lg font-medium text-slate-700 mb-3\">Информация</h3>\n            <p class=\"mb-1\"><span class=\"font-medium\">Email:</span> {{ user.email }}</p>\n            <p><span class=\"font-medium\">Аккаунт создан:</span> {{ formatDate(user.created_at) }}</p>\n          </div>\n          \n          <div>\n            <h3 class=\"text-lg font-medium text-slate-700 mb-3\">Изменить пароль</h3>\n            <form @submit.prevent=\"updatePassword\">\n              <div class=\"mb-4\">\n                <label for=\"currentPassword\" class=\"form-label\">Текущий пароль</label>\n                <input \n                  id=\"currentPassword\" \n                  type=\"password\" \n                  v-model=\"passwordForm.currentPassword\" \n                  class=\"form-input\" \n                  required\n                >\n              </div>\n              \n              <div class=\"mb-4\">\n                <label for=\"newPassword\" class=\"form-label\">Новый пароль</label>\n                <input \n                  id=\"newPassword\" \n                  type=\"password\" \n                  v-model=\"passwordForm.newPassword\" \n                  class=\"form-input\" \n                  required\n                  minlength=\"6\"\n                >\n                <p class=\"text-xs text-slate-500 mt-1\">Минимум 6 символов</p>\n              </div>\n              \n              <div class=\"mb-6\">\n                <label for=\"confirmPassword\" class=\"form-label\">Подтверждение пароля</label>\n                <input \n                  id=\"confirmPassword\" \n                  type=\"password\" \n                  v-model=\"passwordForm.confirmPassword\" \n                  class=\"form-input\" \n                  required\n                  minlength=\"6\"\n                >\n                <p v-if=\"passwordError\" class=\"text-xs text-red-500 mt-1\">\n                  {{ passwordError }}\n                </p>\n              </div>\n              \n              <button \n                type=\"submit\" \n                class=\"btn btn-primary\"\n                :disabled=\"!isPasswordFormValid || passwordUpdating\"\n              >\n                <span v-if=\"passwordUpdating\">\n                  <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Обновление...\n                </span>\n                <span v-else>Обновить пароль</span>\n              </button>\n            </form>\n          </div>\n        </div>\n        \n        <!-- Orders Tab -->\n        <div v-if=\"activeTab === 'orders'\" class=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div class=\"p-6 border-b border-slate-200\">\n            <h2 class=\"text-xl font-semibold text-slate-800\">История заказов</h2>\n          </div>\n          \n          <div v-if=\"orders.length === 0\" class=\"p-6 text-center\">\n            <p class=\"text-slate-600\">У вас пока нет заказов</p>\n            <router-link to=\"/shop\" class=\"btn btn-primary mt-4 inline-block\">\n              Перейти в каталог\n            </router-link>\n          </div>\n          \n          <div v-else class=\"divide-y divide-slate-200\">\n            <div \n              v-for=\"order in orders\" \n              :key=\"order.id\" \n              class=\"p-6 hover:bg-slate-50 transition-colors\"\n            >\n              <div class=\"flex flex-wrap justify-between items-start mb-4\">\n                <div>\n                  <h3 class=\"font-medium text-slate-800\">\n                    Заказ #{{ order.id }}\n                  </h3>\n                  <p class=\"text-sm text-slate-500\">\n                    {{ formatDate(order.created_at) }}\n                  </p>\n                </div>\n                <div class=\"font-medium text-slate-800\">\n                  {{ formatPrice(getOrderTotal(order)) }} ₽\n                </div>\n              </div>\n              \n              <div class=\"space-y-3\">\n                <div \n                  v-for=\"item in order.items\" \n                  :key=\"item.id\" \n                  class=\"flex items-center\"\n                >\n                  <div class=\"w-10 h-10 rounded overflow-hidden flex-shrink-0 mr-3\">\n                    <img \n                      :src=\"item.product.image_url || 'https://via.placeholder.com/100x100?text=Нет+изображения'\" \n                      :alt=\"item.product.title\" \n                      class=\"w-full h-full object-cover\"\n                    >\n                  </div>\n                  <div class=\"flex-grow\">\n                    <p class=\"text-sm font-medium text-slate-800\">{{ item.product.title }}</p>\n                    <p class=\"text-xs text-slate-500\">\n                      {{ formatPrice(item.price_at_time) }} ₽ × {{ item.quantity }}\n                    </p>\n                  </div>\n                  <div class=\"text-sm font-medium text-slate-800\">\n                    {{ formatPrice(item.price_at_time * item.quantity) }} ₽\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useToast } from 'vue-toastification';\n\nexport default {\n  name: 'AccountView',\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const toast = useToast();\n    \n    // State\n    const activeTab = ref('profile');\n    const passwordForm = ref({\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n    const passwordError = ref('');\n    const passwordUpdating = ref(false);\n    \n    const tabs = [\n      { id: 'profile', title: 'Профиль' },\n      { id: 'orders', title: 'История заказов' }\n    ];\n    \n    // Computed properties\n    const isAuthenticated = computed(() => store.getters['auth/isAuthenticated']);\n    const user = computed(() => store.getters['auth/currentUser'] || {});\n    const orders = computed(() => store.getters['orders/allOrders'] || []);\n    const loading = computed(() => store.getters.isLoading);\n    \n    const isPasswordFormValid = computed(() => {\n      return (\n        passwordForm.value.currentPassword.trim() !== '' &&\n        passwordForm.value.newPassword.trim() !== '' &&\n        passwordForm.value.newPassword === passwordForm.value.confirmPassword &&\n        passwordForm.value.newPassword.length >= 6\n      );\n    });\n    \n    // Watch for route query to set active tab\n    onMounted(() => {\n      if (route.query.tab && tabs.some(tab => tab.id === route.query.tab)) {\n        activeTab.value = route.query.tab;\n      }\n      \n      // Fetch orders if on orders tab\n      if (activeTab.value === 'orders') {\n        store.dispatch('orders/fetchOrders');\n      }\n    });\n    \n    // Watch for active tab changes to update route query\n    watch(activeTab, (newTab) => {\n      router.push({ query: { ...route.query, tab: newTab } });\n      \n      // Fetch orders if moving to orders tab\n      if (newTab === 'orders') {\n        store.dispatch('orders/fetchOrders');\n      }\n    });\n    \n    // Watch password form changes\n    watch(() => passwordForm.value.confirmPassword, (newValue) => {\n      if (newValue && passwordForm.value.newPassword !== newValue) {\n        passwordError.value = 'Пароли не совпадают';\n      } else {\n        passwordError.value = '';\n      }\n    });\n    \n    // Methods\n    const updatePassword = async () => {\n      if (!isPasswordFormValid.value) return;\n      \n      passwordUpdating.value = true;\n      \n      try {\n        const result = await store.dispatch('auth/updatePassword', {\n          currentPassword: passwordForm.value.currentPassword,\n          newPassword: passwordForm.value.newPassword\n        });\n        \n        if (result.success) {\n          passwordForm.value = {\n            currentPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          };\n        }\n      } finally {\n        passwordUpdating.value = false;\n      }\n    };\n    \n    const logout = () => {\n      store.dispatch('auth/logout');\n    };\n    \n    const formatDate = (dateString) => {\n      if (!dateString) return '';\n      \n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('ru-RU', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n    \n    const formatPrice = (price) => {\n      return new Intl.NumberFormat('ru-RU').format(price);\n    };\n    \n    const getOrderTotal = (order) => {\n      return order.items.reduce((total, item) => {\n        return total + (item.price_at_time * item.quantity);\n      }, 0);\n    };\n    \n    return {\n      activeTab,\n      tabs,\n      passwordForm,\n      passwordError,\n      passwordUpdating,\n      isPasswordFormValid,\n      isAuthenticated,\n      user,\n      orders,\n      loading,\n      updatePassword,\n      logout,\n      formatDate,\n      formatPrice,\n      getOrderTotal\n    };\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}