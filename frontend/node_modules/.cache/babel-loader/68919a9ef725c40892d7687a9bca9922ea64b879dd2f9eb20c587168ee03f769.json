{"ast":null,"code":"import axios from 'axios';\nimport { useToast } from 'vue-toastification';\nimport { v4 as uuidv4 } from 'uuid';\nconst toast = useToast();\n\n// Generate a guest token if none exists\nconst getGuestToken = () => {\n  let guestToken = localStorage.getItem('guest_token');\n  if (!guestToken) {\n    guestToken = uuidv4();\n    localStorage.setItem('guest_token', guestToken);\n  }\n  return guestToken;\n};\nconst state = {\n  items: JSON.parse(localStorage.getItem('cart_items')) || []\n};\nconst getters = {\n  cartItems: state => state.items,\n  cartItemsCount: state => state.items.reduce((count, item) => count + item.quantity, 0),\n  cartTotal: state => {\n    return state.items.reduce((total, item) => {\n      return total + item.price * item.quantity;\n    }, 0);\n  }\n};\nconst mutations = {\n  SET_CART_ITEMS(state, items) {\n    state.items = items;\n    localStorage.setItem('cart_items', JSON.stringify(items));\n  },\n  ADD_TO_CART(state, {\n    product,\n    quantity\n  }) {\n    const existingItem = state.items.find(item => item.productId === product.id);\n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      state.items.push({\n        productId: product.id,\n        title: product.title,\n        price: product.price,\n        image_url: product.image_url,\n        quantity\n      });\n    }\n    localStorage.setItem('cart_items', JSON.stringify(state.items));\n  },\n  UPDATE_CART_ITEM(state, {\n    productId,\n    quantity\n  }) {\n    const item = state.items.find(item => item.productId === productId);\n    if (item) {\n      item.quantity = quantity;\n      if (quantity <= 0) {\n        state.items = state.items.filter(item => item.productId !== productId);\n      }\n      localStorage.setItem('cart_items', JSON.stringify(state.items));\n    }\n  },\n  REMOVE_FROM_CART(state, productId) {\n    state.items = state.items.filter(item => item.productId !== productId);\n    localStorage.setItem('cart_items', JSON.stringify(state.items));\n  },\n  CLEAR_CART(state) {\n    state.items = [];\n    localStorage.removeItem('cart_items');\n  },\n  CLEAR_USER_CART(state) {\n    // Only clears the state, not localStorage\n    state.items = [];\n  }\n};\nconst actions = {\n  async fetchCart({\n    commit,\n    rootGetters,\n    dispatch\n  }) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n      if (rootGetters['auth/isAuthenticated']) {\n        // For authenticated users, fetch cart from API\n        const response = await axios.get('/api/cart', {\n          headers: {\n            Authorization: `Bearer ${rootGetters['auth/token']}`\n          }\n        });\n        commit('SET_CART_ITEMS', response.data);\n      } else {\n        // For guests, try to fetch from API with guest token\n        const guestToken = getGuestToken();\n        try {\n          const response = await axios.get(`/api/cart/guest/${guestToken}`);\n          commit('SET_CART_ITEMS', response.data);\n        } catch (error) {\n          // If API fails, use local storage (fallback)\n          console.error('Error fetching guest cart:', error);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  },\n  async addToCart({\n    commit,\n    rootGetters,\n    dispatch\n  }, {\n    product,\n    quantity = 1\n  }) {\n    try {\n      if (rootGetters['auth/isAuthenticated']) {\n        // For authenticated users\n        await axios.post('/api/cart', {\n          productId: product.id,\n          quantity\n        }, {\n          headers: {\n            Authorization: `Bearer ${rootGetters['auth/token']}`\n          }\n        });\n      } else {\n        // For guests\n        const guestToken = getGuestToken();\n        await axios.post(`/api/cart/guest`, {\n          guestToken,\n          productId: product.id,\n          quantity\n        });\n      }\n      commit('ADD_TO_CART', {\n        product,\n        quantity\n      });\n      toast.success('Товар добавлен в корзину');\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      toast.error('Не удалось добавить товар в корзину');\n    }\n  },\n  async updateCartItem({\n    commit,\n    rootGetters\n  }, {\n    productId,\n    quantity\n  }) {\n    try {\n      if (rootGetters['auth/isAuthenticated']) {\n        if (quantity <= 0) {\n          await axios.delete(`/api/cart/${productId}`, {\n            headers: {\n              Authorization: `Bearer ${rootGetters['auth/token']}`\n            }\n          });\n        } else {\n          await axios.put(`/api/cart/${productId}`, {\n            quantity\n          }, {\n            headers: {\n              Authorization: `Bearer ${rootGetters['auth/token']}`\n            }\n          });\n        }\n      } else {\n        const guestToken = getGuestToken();\n        if (quantity <= 0) {\n          await axios.delete(`/api/cart/guest/${guestToken}/${productId}`);\n        } else {\n          await axios.put(`/api/cart/guest/${guestToken}/${productId}`, {\n            quantity\n          });\n        }\n      }\n      commit('UPDATE_CART_ITEM', {\n        productId,\n        quantity\n      });\n    } catch (error) {\n      console.error('Error updating cart item:', error);\n      toast.error('Ошибка при обновлении корзины');\n    }\n  },\n  async removeFromCart({\n    commit,\n    rootGetters\n  }, productId) {\n    try {\n      if (rootGetters['auth/isAuthenticated']) {\n        await axios.delete(`/api/cart/${productId}`, {\n          headers: {\n            Authorization: `Bearer ${rootGetters['auth/token']}`\n          }\n        });\n      } else {\n        const guestToken = getGuestToken();\n        await axios.delete(`/api/cart/guest/${guestToken}/${productId}`);\n      }\n      commit('REMOVE_FROM_CART', productId);\n      toast.success('Товар удален из корзины');\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n      toast.error('Ошибка при удалении товара из корзины');\n    }\n  },\n  async clearCart({\n    commit,\n    rootGetters\n  }) {\n    try {\n      if (rootGetters['auth/isAuthenticated']) {\n        await axios.delete('/api/cart', {\n          headers: {\n            Authorization: `Bearer ${rootGetters['auth/token']}`\n          }\n        });\n      } else {\n        const guestToken = getGuestToken();\n        await axios.delete(`/api/cart/guest/${guestToken}`);\n      }\n      commit('CLEAR_CART');\n    } catch (error) {\n      console.error('Error clearing cart:', error);\n      toast.error('Ошибка при очистке корзины');\n    }\n  },\n  async migrateGuestCart({\n    state,\n    dispatch,\n    rootGetters\n  }) {\n    // Called after login to move guest cart to user cart\n    if (!rootGetters['auth/isAuthenticated'] || state.items.length === 0) return;\n    try {\n      const guestToken = localStorage.getItem('guest_token');\n      if (guestToken) {\n        await axios.post('/api/cart/migrate', {\n          guestToken\n        }, {\n          headers: {\n            Authorization: `Bearer ${rootGetters['auth/token']}`\n          }\n        });\n\n        // Refresh the cart from server\n        dispatch('fetchCart');\n\n        // Clear guest token\n        localStorage.removeItem('guest_token');\n      }\n    } catch (error) {\n      console.error('Error migrating guest cart:', error);\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axios","useToast","v4","uuidv4","toast","getGuestToken","guestToken","localStorage","getItem","setItem","state","items","JSON","parse","getters","cartItems","cartItemsCount","reduce","count","item","quantity","cartTotal","total","price","mutations","SET_CART_ITEMS","stringify","ADD_TO_CART","product","existingItem","find","productId","id","push","title","image_url","UPDATE_CART_ITEM","filter","REMOVE_FROM_CART","CLEAR_CART","removeItem","CLEAR_USER_CART","actions","fetchCart","commit","rootGetters","dispatch","root","response","get","headers","Authorization","data","error","console","addToCart","post","success","updateCartItem","delete","put","removeFromCart","clearCart","migrateGuestCart","length","namespaced"],"sources":["/app/src/store/modules/cart.js"],"sourcesContent":["import axios from 'axios';\nimport { useToast } from 'vue-toastification';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst toast = useToast();\n\n// Generate a guest token if none exists\nconst getGuestToken = () => {\n  let guestToken = localStorage.getItem('guest_token');\n  if (!guestToken) {\n    guestToken = uuidv4();\n    localStorage.setItem('guest_token', guestToken);\n  }\n  return guestToken;\n};\n\nconst state = {\n  items: JSON.parse(localStorage.getItem('cart_items')) || []\n};\n\nconst getters = {\n  cartItems: (state) => state.items,\n  cartItemsCount: (state) => state.items.reduce((count, item) => count + item.quantity, 0),\n  cartTotal: (state) => {\n    return state.items.reduce((total, item) => {\n      return total + (item.price * item.quantity);\n    }, 0);\n  }\n};\n\nconst mutations = {\n  SET_CART_ITEMS(state, items) {\n    state.items = items;\n    localStorage.setItem('cart_items', JSON.stringify(items));\n  },\n  \n  ADD_TO_CART(state, { product, quantity }) {\n    const existingItem = state.items.find(item => item.productId === product.id);\n    \n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      state.items.push({\n        productId: product.id,\n        title: product.title,\n        price: product.price,\n        image_url: product.image_url,\n        quantity\n      });\n    }\n    \n    localStorage.setItem('cart_items', JSON.stringify(state.items));\n  },\n  \n  UPDATE_CART_ITEM(state, { productId, quantity }) {\n    const item = state.items.find(item => item.productId === productId);\n    \n    if (item) {\n      item.quantity = quantity;\n      \n      if (quantity <= 0) {\n        state.items = state.items.filter(item => item.productId !== productId);\n      }\n      \n      localStorage.setItem('cart_items', JSON.stringify(state.items));\n    }\n  },\n  \n  REMOVE_FROM_CART(state, productId) {\n    state.items = state.items.filter(item => item.productId !== productId);\n    localStorage.setItem('cart_items', JSON.stringify(state.items));\n  },\n  \n  CLEAR_CART(state) {\n    state.items = [];\n    localStorage.removeItem('cart_items');\n  },\n  \n  CLEAR_USER_CART(state) {\n    // Only clears the state, not localStorage\n    state.items = [];\n  }\n};\n\nconst actions = {\n  async fetchCart({ commit, rootGetters, dispatch }) {\n    try {\n      dispatch('setLoading', true, { root: true });\n      \n      if (rootGetters['auth/isAuthenticated']) {\n        // For authenticated users, fetch cart from API\n        const response = await axios.get('/api/cart', {\n          headers: { Authorization: `Bearer ${rootGetters['auth/token']}` }\n        });\n        commit('SET_CART_ITEMS', response.data);\n      } else {\n        // For guests, try to fetch from API with guest token\n        const guestToken = getGuestToken();\n        try {\n          const response = await axios.get(`/api/cart/guest/${guestToken}`);\n          commit('SET_CART_ITEMS', response.data);\n        } catch (error) {\n          // If API fails, use local storage (fallback)\n          console.error('Error fetching guest cart:', error);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    } finally {\n      dispatch('setLoading', false, { root: true });\n    }\n  },\n  \n  async addToCart({ commit, rootGetters, dispatch }, { product, quantity = 1 }) {\n    try {\n      if (rootGetters['auth/isAuthenticated']) {\n        // For authenticated users\n        await axios.post('/api/cart', {\n          productId: product.id,\n          quantity\n        }, {\n          headers: { Authorization: `Bearer ${rootGetters['auth/token']}` }\n        });\n      } else {\n        // For guests\n        const guestToken = getGuestToken();\n        await axios.post(`/api/cart/guest`, {\n          guestToken,\n          productId: product.id,\n          quantity\n        });\n      }\n      \n      commit('ADD_TO_CART', { product, quantity });\n      toast.success('Товар добавлен в корзину');\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      toast.error('Не удалось добавить товар в корзину');\n    }\n  },\n  \n  async updateCartItem({ commit, rootGetters }, { productId, quantity }) {\n    try {\n      if (rootGetters['auth/isAuthenticated']) {\n        if (quantity <= 0) {\n          await axios.delete(`/api/cart/${productId}`, {\n            headers: { Authorization: `Bearer ${rootGetters['auth/token']}` }\n          });\n        } else {\n          await axios.put(`/api/cart/${productId}`, { quantity }, {\n            headers: { Authorization: `Bearer ${rootGetters['auth/token']}` }\n          });\n        }\n      } else {\n        const guestToken = getGuestToken();\n        if (quantity <= 0) {\n          await axios.delete(`/api/cart/guest/${guestToken}/${productId}`);\n        } else {\n          await axios.put(`/api/cart/guest/${guestToken}/${productId}`, { quantity });\n        }\n      }\n      \n      commit('UPDATE_CART_ITEM', { productId, quantity });\n    } catch (error) {\n      console.error('Error updating cart item:', error);\n      toast.error('Ошибка при обновлении корзины');\n    }\n  },\n  \n  async removeFromCart({ commit, rootGetters }, productId) {\n    try {\n      if (rootGetters['auth/isAuthenticated']) {\n        await axios.delete(`/api/cart/${productId}`, {\n          headers: { Authorization: `Bearer ${rootGetters['auth/token']}` }\n        });\n      } else {\n        const guestToken = getGuestToken();\n        await axios.delete(`/api/cart/guest/${guestToken}/${productId}`);\n      }\n      \n      commit('REMOVE_FROM_CART', productId);\n      toast.success('Товар удален из корзины');\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n      toast.error('Ошибка при удалении товара из корзины');\n    }\n  },\n  \n  async clearCart({ commit, rootGetters }) {\n    try {\n      if (rootGetters['auth/isAuthenticated']) {\n        await axios.delete('/api/cart', {\n          headers: { Authorization: `Bearer ${rootGetters['auth/token']}` }\n        });\n      } else {\n        const guestToken = getGuestToken();\n        await axios.delete(`/api/cart/guest/${guestToken}`);\n      }\n      \n      commit('CLEAR_CART');\n    } catch (error) {\n      console.error('Error clearing cart:', error);\n      toast.error('Ошибка при очистке корзины');\n    }\n  },\n  \n  async migrateGuestCart({ state, dispatch, rootGetters }) {\n    // Called after login to move guest cart to user cart\n    if (!rootGetters['auth/isAuthenticated'] || state.items.length === 0) return;\n    \n    try {\n      const guestToken = localStorage.getItem('guest_token');\n      if (guestToken) {\n        await axios.post('/api/cart/migrate', { guestToken }, {\n          headers: { Authorization: `Bearer ${rootGetters['auth/token']}` }\n        });\n        \n        // Refresh the cart from server\n        dispatch('fetchCart');\n        \n        // Clear guest token\n        localStorage.removeItem('guest_token');\n      }\n    } catch (error) {\n      console.error('Error migrating guest cart:', error);\n    }\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}