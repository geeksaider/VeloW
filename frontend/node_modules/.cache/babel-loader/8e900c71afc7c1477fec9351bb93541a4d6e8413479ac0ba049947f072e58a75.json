{"ast":null,"code":"import { ref, computed, watch, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'RegisterView',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    // State\n    const email = ref('');\n    const password = ref('');\n    const passwordConfirm = ref('');\n    const passwordError = ref('');\n\n    // Computed\n    const loading = computed(() => store.getters.isLoading);\n    const isAuthenticated = computed(() => store.getters['auth/isAuthenticated']);\n    const isFormValid = computed(() => {\n      return email.value.trim() !== '' && password.value.trim() !== '' && password.value === passwordConfirm.value && password.value.length >= 6;\n    });\n\n    // Watch for password confirmation\n    watch([password, passwordConfirm], ([newPassword, newPasswordConfirm]) => {\n      if (newPasswordConfirm && newPassword !== newPasswordConfirm) {\n        passwordError.value = 'Пароли не совпадают';\n      } else {\n        passwordError.value = '';\n      }\n    });\n\n    // Methods\n    const register = async () => {\n      if (!isFormValid.value) return;\n      const userData = {\n        email: email.value,\n        password: password.value\n      };\n      const result = await store.dispatch('auth/register', userData);\n      if (result.success) {\n        router.push('/');\n      }\n    };\n\n    // Lifecycle hooks\n    onMounted(() => {\n      // If already logged in, redirect to home\n      if (isAuthenticated.value) {\n        router.push('/');\n      }\n    });\n    return {\n      email,\n      password,\n      passwordConfirm,\n      passwordError,\n      loading,\n      isFormValid,\n      register\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","useStore","useRouter","name","setup","store","router","email","password","passwordConfirm","passwordError","loading","getters","isLoading","isAuthenticated","isFormValid","value","trim","length","newPassword","newPasswordConfirm","register","userData","result","dispatch","success","push"],"sources":["C:\\Users\\geeksaider\\VeloW\\frontend\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\n  <div class=\"container mx-auto px-4 py-12\">\n    <div class=\"max-w-md mx-auto bg-white rounded-lg shadow-md overflow-hidden\">\n      <div class=\"p-6\">\n        <h1 class=\"text-2xl font-bold text-slate-800 mb-6 text-center\">Регистрация</h1>\n        \n        <form @submit.prevent=\"register\">\n          <div class=\"mb-4\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input \n              id=\"email\" \n              type=\"email\" \n              v-model=\"email\" \n              class=\"form-input\" \n              required\n              placeholder=\"Введите ваш email\"\n            >\n          </div>\n          \n          <div class=\"mb-4\">\n            <label for=\"password\" class=\"form-label\">Пароль</label>\n            <input \n              id=\"password\" \n              type=\"password\" \n              v-model=\"password\" \n              class=\"form-input\" \n              required\n              placeholder=\"Введите пароль\"\n              minlength=\"6\"\n            >\n            <p class=\"text-xs text-slate-500 mt-1\">Минимум 6 символов</p>\n          </div>\n          \n          <div class=\"mb-6\">\n            <label for=\"passwordConfirm\" class=\"form-label\">Подтверждение пароля</label>\n            <input \n              id=\"passwordConfirm\" \n              type=\"password\" \n              v-model=\"passwordConfirm\" \n              class=\"form-input\" \n              required\n              placeholder=\"Повторите пароль\"\n              minlength=\"6\"\n            >\n            <p v-if=\"passwordError\" class=\"text-xs text-red-500 mt-1\">\n              {{ passwordError }}\n            </p>\n          </div>\n          \n          <div class=\"flex flex-col space-y-4\">\n            <button \n              type=\"submit\" \n              class=\"btn btn-primary w-full\"\n              :disabled=\"loading || !isFormValid\"\n            >\n              <span v-if=\"loading\">\n                <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                  <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Регистрация...\n              </span>\n              <span v-else>Зарегистрироваться</span>\n            </button>\n            \n            <div class=\"text-center text-slate-600\">\n              Уже есть аккаунт? \n              <router-link to=\"/login\" class=\"text-slate-800 font-medium hover:underline\">\n                Войти\n              </router-link>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: 'RegisterView',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    \n    // State\n    const email = ref('');\n    const password = ref('');\n    const passwordConfirm = ref('');\n    const passwordError = ref('');\n    \n    // Computed\n    const loading = computed(() => store.getters.isLoading);\n    const isAuthenticated = computed(() => store.getters['auth/isAuthenticated']);\n    \n    const isFormValid = computed(() => {\n      return (\n        email.value.trim() !== '' &&\n        password.value.trim() !== '' &&\n        password.value === passwordConfirm.value &&\n        password.value.length >= 6\n      );\n    });\n    \n    // Watch for password confirmation\n    watch([password, passwordConfirm], ([newPassword, newPasswordConfirm]) => {\n      if (newPasswordConfirm && newPassword !== newPasswordConfirm) {\n        passwordError.value = 'Пароли не совпадают';\n      } else {\n        passwordError.value = '';\n      }\n    });\n    \n    // Methods\n    const register = async () => {\n      if (!isFormValid.value) return;\n      \n      const userData = {\n        email: email.value,\n        password: password.value\n      };\n      \n      const result = await store.dispatch('auth/register', userData);\n      \n      if (result.success) {\n        router.push('/');\n      }\n    };\n    \n    // Lifecycle hooks\n    onMounted(() => {\n      // If already logged in, redirect to home\n      if (isAuthenticated.value) {\n        router.push('/');\n      }\n    });\n    \n    return {\n      email,\n      password,\n      passwordConfirm,\n      passwordError,\n      loading,\n      isFormValid,\n      register\n    };\n  }\n};\n</script>\n"],"mappings":"AA+EA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,KAAK;AACrD,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,MAAK,GAAIJ,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMK,KAAI,GAAIV,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMW,QAAO,GAAIX,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMY,eAAc,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMa,aAAY,GAAIb,GAAG,CAAC,EAAE,CAAC;;IAE7B;IACA,MAAMc,OAAM,GAAIb,QAAQ,CAAC,MAAMO,KAAK,CAACO,OAAO,CAACC,SAAS,CAAC;IACvD,MAAMC,eAAc,GAAIhB,QAAQ,CAAC,MAAMO,KAAK,CAACO,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAE7E,MAAMG,WAAU,GAAIjB,QAAQ,CAAC,MAAM;MACjC,OACES,KAAK,CAACS,KAAK,CAACC,IAAI,CAAC,MAAM,EAAC,IACxBT,QAAQ,CAACQ,KAAK,CAACC,IAAI,CAAC,MAAM,EAAC,IAC3BT,QAAQ,CAACQ,KAAI,KAAMP,eAAe,CAACO,KAAI,IACvCR,QAAQ,CAACQ,KAAK,CAACE,MAAK,IAAK;IAE7B,CAAC,CAAC;;IAEF;IACAnB,KAAK,CAAC,CAACS,QAAQ,EAAEC,eAAe,CAAC,EAAE,CAAC,CAACU,WAAW,EAAEC,kBAAkB,CAAC,KAAK;MACxE,IAAIA,kBAAiB,IAAKD,WAAU,KAAMC,kBAAkB,EAAE;QAC5DV,aAAa,CAACM,KAAI,GAAI,qBAAqB;MAC7C,OAAO;QACLN,aAAa,CAACM,KAAI,GAAI,EAAE;MAC1B;IACF,CAAC,CAAC;;IAEF;IACA,MAAMK,QAAO,GAAI,MAAAA,CAAA,KAAY;MAC3B,IAAI,CAACN,WAAW,CAACC,KAAK,EAAE;MAExB,MAAMM,QAAO,GAAI;QACff,KAAK,EAAEA,KAAK,CAACS,KAAK;QAClBR,QAAQ,EAAEA,QAAQ,CAACQ;MACrB,CAAC;MAED,MAAMO,MAAK,GAAI,MAAMlB,KAAK,CAACmB,QAAQ,CAAC,eAAe,EAAEF,QAAQ,CAAC;MAE9D,IAAIC,MAAM,CAACE,OAAO,EAAE;QAClBnB,MAAM,CAACoB,IAAI,CAAC,GAAG,CAAC;MAClB;IACF,CAAC;;IAED;IACA1B,SAAS,CAAC,MAAM;MACd;MACA,IAAIc,eAAe,CAACE,KAAK,EAAE;QACzBV,MAAM,CAACoB,IAAI,CAAC,GAAG,CAAC;MAClB;IACF,CAAC,CAAC;IAEF,OAAO;MACLnB,KAAK;MACLC,QAAQ;MACRC,eAAe;MACfC,aAAa;MACbC,OAAO;MACPI,WAAW;MACXM;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}