{"ast":null,"code":"import axios from 'axios';\nimport { useToast } from 'vue-toastification';\nconst toast = useToast();\nconst state = {\n  products: [],\n  product: null,\n  categories: [],\n  filters: {\n    category: '',\n    search: '',\n    sort: 'default' // default, price-low, price-high\n  }\n};\nconst getters = {\n  allProducts: state => state.products,\n  currentProduct: state => state.product,\n  categories: state => state.categories,\n  filters: state => state.filters,\n  filteredProducts: state => {\n    let result = [...state.products];\n\n    // Filter by category\n    if (state.filters.category) {\n      result = result.filter(product => product.category === state.filters.category);\n    }\n\n    // Filter by search term\n    if (state.filters.search) {\n      const searchLower = state.filters.search.toLowerCase();\n      result = result.filter(product => product.title.toLowerCase().includes(searchLower) || product.description.toLowerCase().includes(searchLower));\n    }\n\n    // Sort products\n    if (state.filters.sort === 'price-low') {\n      result.sort((a, b) => a.price - b.price);\n    } else if (state.filters.sort === 'price-high') {\n      result.sort((a, b) => b.price - a.price);\n    }\n    return result;\n  }\n};\nconst mutations = {\n  SET_PRODUCTS(state, products) {\n    state.products = products;\n  },\n  SET_PRODUCT(state, product) {\n    state.product = product;\n  },\n  SET_CATEGORIES(state, categories) {\n    state.categories = categories;\n  },\n  UPDATE_FILTER(state, {\n    key,\n    value\n  }) {\n    state.filters[key] = value;\n  },\n  RESET_FILTERS(state) {\n    state.filters = {\n      category: '',\n      search: '',\n      sort: 'default'\n    };\n  },\n  ADD_PRODUCT(state, product) {\n    state.products.unshift(product);\n  },\n  UPDATE_PRODUCT(state, updatedProduct) {\n    const index = state.products.findIndex(p => p.id === updatedProduct.id);\n    if (index !== -1) {\n      state.products.splice(index, 1, updatedProduct);\n    }\n    if (state.product && state.product.id === updatedProduct.id) {\n      state.product = updatedProduct;\n    }\n  },\n  DELETE_PRODUCT(state, productId) {\n    state.products = state.products.filter(p => p.id !== productId);\n    if (state.product && state.product.id === productId) {\n      state.product = null;\n    }\n  }\n};\nconst actions = {\n  async fetchProducts({\n    commit,\n    dispatch,\n    state\n  }) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n\n      // Build query parameters\n      const params = new URLSearchParams();\n      if (state.filters.category) params.append('category', state.filters.category);\n      if (state.filters.search) params.append('search', state.filters.search);\n      if (state.filters.sort && state.filters.sort !== 'default') params.append('sort', state.filters.sort);\n      const queryString = params.toString() ? `?${params.toString()}` : '';\n      const response = await axios.get(`/api/products${queryString}`);\n      commit('SET_PRODUCTS', response.data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      dispatch('setError', 'Не удалось загрузить товары', {\n        root: true\n      });\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  },\n  async fetchProduct({\n    commit,\n    dispatch\n  }, productId) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n      const response = await axios.get(`/api/products/${productId}`);\n      commit('SET_PRODUCT', response.data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching product ${productId}:`, error);\n      dispatch('setError', 'Не удалось загрузить информацию о товаре', {\n        root: true\n      });\n      return null;\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  },\n  async fetchCategories({\n    commit,\n    dispatch\n  }) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n      const response = await axios.get('/api/products/categories');\n      commit('SET_CATEGORIES', response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  },\n  updateFilter({\n    commit,\n    dispatch\n  }, {\n    key,\n    value\n  }) {\n    commit('UPDATE_FILTER', {\n      key,\n      value\n    });\n    dispatch('fetchProducts');\n  },\n  resetFilters({\n    commit,\n    dispatch\n  }) {\n    commit('RESET_FILTERS');\n    dispatch('fetchProducts');\n  },\n  // Admin actions for CRUD operations\n  async createProduct({\n    commit,\n    rootGetters,\n    dispatch\n  }, productData) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n      const formData = new FormData();\n\n      // Append text fields\n      for (const [key, value] of Object.entries(productData)) {\n        if (key !== 'image') {\n          formData.append(key, value);\n        }\n      }\n\n      // Append image if it exists\n      if (productData.image) {\n        formData.append('image', productData.image);\n      }\n      const response = await axios.post('/api/products', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${rootGetters['auth/token']}`\n        }\n      });\n      commit('ADD_PRODUCT', response.data);\n      toast.success('Товар успешно создан');\n      return {\n        success: true,\n        product: response.data\n      };\n    } catch (error) {\n      console.error('Error creating product:', error);\n      toast.error('Ошибка при создании товара');\n      return {\n        success: false\n      };\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  },\n  async updateProduct({\n    commit,\n    rootGetters,\n    dispatch\n  }, {\n    productId,\n    productData\n  }) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n      const formData = new FormData();\n\n      // Append text fields\n      for (const [key, value] of Object.entries(productData)) {\n        if (key !== 'image') {\n          formData.append(key, value);\n        }\n      }\n\n      // Append image if it exists\n      if (productData.image) {\n        formData.append('image', productData.image);\n      }\n      const response = await axios.put(`/api/products/${productId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${rootGetters['auth/token']}`\n        }\n      });\n      commit('UPDATE_PRODUCT', response.data);\n      toast.success('Товар успешно обновлен');\n      return {\n        success: true,\n        product: response.data\n      };\n    } catch (error) {\n      console.error(`Error updating product ${productId}:`, error);\n      toast.error('Ошибка при обновлении товара');\n      return {\n        success: false\n      };\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  },\n  async deleteProduct({\n    commit,\n    rootGetters,\n    dispatch\n  }, productId) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n      await axios.delete(`/api/products/${productId}`, {\n        headers: {\n          Authorization: `Bearer ${rootGetters['auth/token']}`\n        }\n      });\n      commit('DELETE_PRODUCT', productId);\n      toast.success('Товар успешно удален');\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error(`Error deleting product ${productId}:`, error);\n      toast.error('Ошибка при удалении товара');\n      return {\n        success: false\n      };\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axios","useToast","toast","state","products","product","categories","filters","category","search","sort","getters","allProducts","currentProduct","filteredProducts","result","filter","searchLower","toLowerCase","title","includes","description","a","b","price","mutations","SET_PRODUCTS","SET_PRODUCT","SET_CATEGORIES","UPDATE_FILTER","key","value","RESET_FILTERS","ADD_PRODUCT","unshift","UPDATE_PRODUCT","updatedProduct","index","findIndex","p","id","splice","DELETE_PRODUCT","productId","actions","fetchProducts","commit","dispatch","root","params","URLSearchParams","append","queryString","toString","response","get","data","error","console","fetchProduct","fetchCategories","updateFilter","resetFilters","createProduct","rootGetters","productData","formData","FormData","Object","entries","image","post","headers","Authorization","success","updateProduct","put","deleteProduct","delete","namespaced"],"sources":["/app/src/store/modules/products.js"],"sourcesContent":["import axios from 'axios';\nimport { useToast } from 'vue-toastification';\n\nconst toast = useToast();\n\nconst state = {\n  products: [],\n  product: null,\n  categories: [],\n  filters: {\n    category: '',\n    search: '',\n    sort: 'default' // default, price-low, price-high\n  }\n};\n\nconst getters = {\n  allProducts: (state) => state.products,\n  currentProduct: (state) => state.product,\n  categories: (state) => state.categories,\n  filters: (state) => state.filters,\n  \n  filteredProducts: (state) => {\n    let result = [...state.products];\n    \n    // Filter by category\n    if (state.filters.category) {\n      result = result.filter(product => product.category === state.filters.category);\n    }\n    \n    // Filter by search term\n    if (state.filters.search) {\n      const searchLower = state.filters.search.toLowerCase();\n      result = result.filter(product => \n        product.title.toLowerCase().includes(searchLower) || \n        product.description.toLowerCase().includes(searchLower)\n      );\n    }\n    \n    // Sort products\n    if (state.filters.sort === 'price-low') {\n      result.sort((a, b) => a.price - b.price);\n    } else if (state.filters.sort === 'price-high') {\n      result.sort((a, b) => b.price - a.price);\n    }\n    \n    return result;\n  }\n};\n\nconst mutations = {\n  SET_PRODUCTS(state, products) {\n    state.products = products;\n  },\n  \n  SET_PRODUCT(state, product) {\n    state.product = product;\n  },\n  \n  SET_CATEGORIES(state, categories) {\n    state.categories = categories;\n  },\n  \n  UPDATE_FILTER(state, { key, value }) {\n    state.filters[key] = value;\n  },\n  \n  RESET_FILTERS(state) {\n    state.filters = {\n      category: '',\n      search: '',\n      sort: 'default'\n    };\n  },\n  \n  ADD_PRODUCT(state, product) {\n    state.products.unshift(product);\n  },\n  \n  UPDATE_PRODUCT(state, updatedProduct) {\n    const index = state.products.findIndex(p => p.id === updatedProduct.id);\n    if (index !== -1) {\n      state.products.splice(index, 1, updatedProduct);\n    }\n    if (state.product && state.product.id === updatedProduct.id) {\n      state.product = updatedProduct;\n    }\n  },\n  \n  DELETE_PRODUCT(state, productId) {\n    state.products = state.products.filter(p => p.id !== productId);\n    if (state.product && state.product.id === productId) {\n      state.product = null;\n    }\n  }\n};\n\nconst actions = {\n  async fetchProducts({ commit, dispatch, state }) {\n    try {\n      dispatch('setLoading', true, { root: true });\n      \n      // Build query parameters\n      const params = new URLSearchParams();\n      if (state.filters.category) params.append('category', state.filters.category);\n      if (state.filters.search) params.append('search', state.filters.search);\n      if (state.filters.sort && state.filters.sort !== 'default') params.append('sort', state.filters.sort);\n      \n      const queryString = params.toString() ? `?${params.toString()}` : '';\n      const response = await axios.get(`/api/products${queryString}`);\n      \n      commit('SET_PRODUCTS', response.data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      dispatch('setError', 'Не удалось загрузить товары', { root: true });\n    } finally {\n      dispatch('setLoading', false, { root: true });\n    }\n  },\n  \n  async fetchProduct({ commit, dispatch }, productId) {\n    try {\n      dispatch('setLoading', true, { root: true });\n      \n      const response = await axios.get(`/api/products/${productId}`);\n      commit('SET_PRODUCT', response.data);\n      \n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching product ${productId}:`, error);\n      dispatch('setError', 'Не удалось загрузить информацию о товаре', { root: true });\n      return null;\n    } finally {\n      dispatch('setLoading', false, { root: true });\n    }\n  },\n  \n  async fetchCategories({ commit, dispatch }) {\n    try {\n      dispatch('setLoading', true, { root: true });\n      \n      const response = await axios.get('/api/products/categories');\n      commit('SET_CATEGORIES', response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    } finally {\n      dispatch('setLoading', false, { root: true });\n    }\n  },\n  \n  updateFilter({ commit, dispatch }, { key, value }) {\n    commit('UPDATE_FILTER', { key, value });\n    dispatch('fetchProducts');\n  },\n  \n  resetFilters({ commit, dispatch }) {\n    commit('RESET_FILTERS');\n    dispatch('fetchProducts');\n  },\n  \n  // Admin actions for CRUD operations\n  async createProduct({ commit, rootGetters, dispatch }, productData) {\n    try {\n      dispatch('setLoading', true, { root: true });\n      \n      const formData = new FormData();\n      \n      // Append text fields\n      for (const [key, value] of Object.entries(productData)) {\n        if (key !== 'image') {\n          formData.append(key, value);\n        }\n      }\n      \n      // Append image if it exists\n      if (productData.image) {\n        formData.append('image', productData.image);\n      }\n      \n      const response = await axios.post('/api/products', formData, {\n        headers: { \n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${rootGetters['auth/token']}` \n        }\n      });\n      \n      commit('ADD_PRODUCT', response.data);\n      toast.success('Товар успешно создан');\n      \n      return { success: true, product: response.data };\n    } catch (error) {\n      console.error('Error creating product:', error);\n      toast.error('Ошибка при создании товара');\n      return { success: false };\n    } finally {\n      dispatch('setLoading', false, { root: true });\n    }\n  },\n  \n  async updateProduct({ commit, rootGetters, dispatch }, { productId, productData }) {\n    try {\n      dispatch('setLoading', true, { root: true });\n      \n      const formData = new FormData();\n      \n      // Append text fields\n      for (const [key, value] of Object.entries(productData)) {\n        if (key !== 'image') {\n          formData.append(key, value);\n        }\n      }\n      \n      // Append image if it exists\n      if (productData.image) {\n        formData.append('image', productData.image);\n      }\n      \n      const response = await axios.put(`/api/products/${productId}`, formData, {\n        headers: { \n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${rootGetters['auth/token']}` \n        }\n      });\n      \n      commit('UPDATE_PRODUCT', response.data);\n      toast.success('Товар успешно обновлен');\n      \n      return { success: true, product: response.data };\n    } catch (error) {\n      console.error(`Error updating product ${productId}:`, error);\n      toast.error('Ошибка при обновлении товара');\n      return { success: false };\n    } finally {\n      dispatch('setLoading', false, { root: true });\n    }\n  },\n  \n  async deleteProduct({ commit, rootGetters, dispatch }, productId) {\n    try {\n      dispatch('setLoading', true, { root: true });\n      \n      await axios.delete(`/api/products/${productId}`, {\n        headers: { Authorization: `Bearer ${rootGetters['auth/token']}` }\n      });\n      \n      commit('DELETE_PRODUCT', productId);\n      toast.success('Товар успешно удален');\n      \n      return { success: true };\n    } catch (error) {\n      console.error(`Error deleting product ${productId}:`, error);\n      toast.error('Ошибка при удалении товара');\n      return { success: false };\n    } finally {\n      dispatch('setLoading', false, { root: true });\n    }\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}