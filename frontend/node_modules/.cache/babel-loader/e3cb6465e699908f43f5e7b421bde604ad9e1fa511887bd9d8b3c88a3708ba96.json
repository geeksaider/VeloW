{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport NotFoundView from '../views/NotFoundView.vue';\nimport NewArrivalsView from '../views/NewArrivalsView.vue';\nimport AboutView from '../views/AboutView.vue';\nimport store from '../store';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView,\n  meta: {\n    title: 'Velo - Главная'\n  }\n}, {\n  path: '/shop',\n  name: 'shop',\n  component: () => import('../views/ShopView.vue'),\n  meta: {\n    title: 'Velo - Каталог'\n  }\n}, {\n  path: '/product/:id',\n  name: 'product-detail',\n  component: () => import('../views/ProductDetailView.vue'),\n  meta: {\n    title: 'Velo - Товар'\n  }\n}, {\n  path: '/cart',\n  name: 'cart',\n  component: () => import('../views/CartView.vue'),\n  meta: {\n    title: 'Velo - Корзина'\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: () => import('../views/LoginView.vue'),\n  meta: {\n    guest: true,\n    title: 'Velo - Вход'\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: () => import('../views/RegisterView.vue'),\n  meta: {\n    guest: true,\n    title: 'Velo - Регистрация'\n  }\n}, {\n  path: '/account',\n  name: 'account',\n  component: () => import('../views/AccountView.vue'),\n  meta: {\n    requiresAuth: true,\n    title: 'Velo - Личный кабинет'\n  }\n}, {\n  path: '/checkout',\n  name: 'checkout',\n  component: () => import('../views/CheckoutView.vue'),\n  meta: {\n    requiresAuth: true,\n    title: 'Velo - Оформление заказа'\n  }\n}, {\n  path: '/admin',\n  name: 'admin',\n  component: () => import('../views/admin/AdminView.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true,\n    title: 'Velo - Админ-панель'\n  }\n}, {\n  path: '/new',\n  name: 'new-arrivals',\n  component: NewArrivalsView,\n  meta: {\n    title: 'Новинки - Velo'\n  }\n}, {\n  path: '/about',\n  name: 'about',\n  component: AboutView,\n  meta: {\n    title: 'О нас - Velo'\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  name: 'not-found',\n  component: NotFoundView,\n  meta: {\n    title: 'Страница не найдена - Velo'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  scrollBehavior() {\n    return {\n      top: 0\n    };\n  }\n});\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = store.getters['auth/isAuthenticated'];\n  const isAdmin = store.getters['auth/isAdmin'];\n\n  // Update document title\n  document.title = to.meta.title || 'Velo - Интернет-магазин';\n\n  // Check auth requirements\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isLoggedIn) {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      return;\n    }\n\n    // Check admin requirements\n    if (to.matched.some(record => record.meta.requiresAdmin) && !isAdmin) {\n      next({\n        path: '/'\n      });\n      return;\n    }\n  } else if (to.matched.some(record => record.meta.guest)) {\n    if (isLoggedIn) {\n      next({\n        path: '/'\n      });\n      return;\n    }\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","NotFoundView","NewArrivalsView","AboutView","store","routes","path","name","component","meta","title","guest","requiresAuth","requiresAdmin","router","history","process","env","BASE_URL","scrollBehavior","top","beforeEach","to","from","next","isLoggedIn","getters","isAdmin","document","matched","some","record","query","redirect","fullPath"],"sources":["C:/Users/geeksaider/VeloW/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport NotFoundView from '../views/NotFoundView.vue'\nimport NewArrivalsView from '../views/NewArrivalsView.vue'\nimport AboutView from '../views/AboutView.vue'\nimport store from '../store'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView,\n    meta: { title: 'Velo - Главная' }\n  },\n  {\n    path: '/shop',\n    name: 'shop',\n    component: () => import('../views/ShopView.vue'),\n    meta: { title: 'Velo - Каталог' }\n  },\n  {\n    path: '/product/:id',\n    name: 'product-detail',\n    component: () => import('../views/ProductDetailView.vue'),\n    meta: { title: 'Velo - Товар' }\n  },\n  {\n    path: '/cart',\n    name: 'cart',\n    component: () => import('../views/CartView.vue'),\n    meta: { title: 'Velo - Корзина' }\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: () => import('../views/LoginView.vue'),\n    meta: { guest: true, title: 'Velo - Вход' }\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: () => import('../views/RegisterView.vue'),\n    meta: { guest: true, title: 'Velo - Регистрация' }\n  },\n  {\n    path: '/account',\n    name: 'account',\n    component: () => import('../views/AccountView.vue'),\n    meta: { requiresAuth: true, title: 'Velo - Личный кабинет' }\n  },\n  {\n    path: '/checkout',\n    name: 'checkout',\n    component: () => import('../views/CheckoutView.vue'),\n    meta: { requiresAuth: true, title: 'Velo - Оформление заказа' }\n  },\n  {\n    path: '/admin',\n    name: 'admin',\n    component: () => import('../views/admin/AdminView.vue'),\n    meta: { requiresAuth: true, requiresAdmin: true, title: 'Velo - Админ-панель' }\n  },\n  {\n    path: '/new',\n    name: 'new-arrivals',\n    component: NewArrivalsView,\n    meta: {\n      title: 'Новинки - Velo'\n    }\n  },\n  {\n    path: '/about',\n    name: 'about',\n    component: AboutView,\n    meta: {\n      title: 'О нас - Velo'\n    }\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    name: 'not-found',\n    component: NotFoundView,\n    meta: {\n      title: 'Страница не найдена - Velo'\n    }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  scrollBehavior() {\n    return { top: 0 }\n  }\n})\n\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = store.getters['auth/isAuthenticated']\n  const isAdmin = store.getters['auth/isAdmin']\n  \n  // Update document title\n  document.title = to.meta.title || 'Velo - Интернет-магазин'\n  \n  // Check auth requirements\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isLoggedIn) {\n      next({\n        path: '/login',\n        query: { redirect: to.fullPath }\n      })\n      return\n    }\n    \n    // Check admin requirements\n    if (to.matched.some(record => record.meta.requiresAdmin) && !isAdmin) {\n      next({ path: '/' })\n      return\n    }\n  } else if (to.matched.some(record => record.meta.guest)) {\n    if (isLoggedIn) {\n      next({ path: '/' })\n      return\n    }\n  }\n  \n  next()\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,UAAU;AAE5B,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER,QAAQ;EACnBS,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAiB;AAClC,CAAC,EACD;EACEJ,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB,CAAC;EAChDC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAiB;AAClC,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,gCAAgC,CAAC;EACzDC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAe;AAChC,CAAC,EACD;EACEJ,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB,CAAC;EAChDC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAiB;AAClC,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB,CAAC;EACjDC,IAAI,EAAE;IAAEE,KAAK,EAAE,IAAI;IAAED,KAAK,EAAE;EAAc;AAC5C,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B,CAAC;EACpDC,IAAI,EAAE;IAAEE,KAAK,EAAE,IAAI;IAAED,KAAK,EAAE;EAAqB;AACnD,CAAC,EACD;EACEJ,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,0BAA0B,CAAC;EACnDC,IAAI,EAAE;IAAEG,YAAY,EAAE,IAAI;IAAEF,KAAK,EAAE;EAAwB;AAC7D,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B,CAAC;EACpDC,IAAI,EAAE;IAAEG,YAAY,EAAE,IAAI;IAAEF,KAAK,EAAE;EAA2B;AAChE,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,8BAA8B,CAAC;EACvDC,IAAI,EAAE;IAAEG,YAAY,EAAE,IAAI;IAAEC,aAAa,EAAE,IAAI;IAAEH,KAAK,EAAE;EAAsB;AAChF,CAAC,EACD;EACEJ,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEN,eAAe;EAC1BO,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEL,SAAS;EACpBM,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEP,YAAY;EACvBQ,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,CACF;AAED,MAAMI,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,gBAAgB,CAACiB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cb,MAAM;EACNc,cAAcA,CAAA,EAAG;IACf,OAAO;MAAEC,GAAG,EAAE;IAAE,CAAC;EACnB;AACF,CAAC,CAAC;AAEFN,MAAM,CAACO,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,UAAU,GAAGrB,KAAK,CAACsB,OAAO,CAAC,sBAAsB,CAAC;EACxD,MAAMC,OAAO,GAAGvB,KAAK,CAACsB,OAAO,CAAC,cAAc,CAAC;;EAE7C;EACAE,QAAQ,CAAClB,KAAK,GAAGY,EAAE,CAACb,IAAI,CAACC,KAAK,IAAI,yBAAyB;;EAE3D;EACA,IAAIY,EAAE,CAACO,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACtB,IAAI,CAACG,YAAY,CAAC,EAAE;IACvD,IAAI,CAACa,UAAU,EAAE;MACfD,IAAI,CAAC;QACHlB,IAAI,EAAE,QAAQ;QACd0B,KAAK,EAAE;UAAEC,QAAQ,EAAEX,EAAE,CAACY;QAAS;MACjC,CAAC,CAAC;MACF;IACF;;IAEA;IACA,IAAIZ,EAAE,CAACO,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACtB,IAAI,CAACI,aAAa,CAAC,IAAI,CAACc,OAAO,EAAE;MACpEH,IAAI,CAAC;QAAElB,IAAI,EAAE;MAAI,CAAC,CAAC;MACnB;IACF;EACF,CAAC,MAAM,IAAIgB,EAAE,CAACO,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACtB,IAAI,CAACE,KAAK,CAAC,EAAE;IACvD,IAAIc,UAAU,EAAE;MACdD,IAAI,CAAC;QAAElB,IAAI,EAAE;MAAI,CAAC,CAAC;MACnB;IACF;EACF;EAEAkB,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeV,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}